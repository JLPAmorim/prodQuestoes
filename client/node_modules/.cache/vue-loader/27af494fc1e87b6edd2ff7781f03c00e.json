{"remainingRequest":"C:\\Users\\jlp_a\\Desktop\\prodQuestoes\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\jlp_a\\Desktop\\prodQuestoes\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jlp_a\\Desktop\\prodQuestoes\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jlp_a\\Desktop\\prodQuestoes\\client\\src\\components\\Respostas.vue?vue&type=template&id=6eb0ac72&","dependencies":[{"path":"C:\\Users\\jlp_a\\Desktop\\prodQuestoes\\client\\src\\components\\Respostas.vue","mtime":1619301572955},{"path":"C:\\Users\\jlp_a\\Desktop\\prodQuestoes\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jlp_a\\Desktop\\prodQuestoes\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\jlp_a\\Desktop\\prodQuestoes\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jlp_a\\Desktop\\prodQuestoes\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}